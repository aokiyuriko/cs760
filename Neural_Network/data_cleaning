import os
import json
import numpy as np
import pandas as pd
from pandas.io.json import json_normalize

#flatten columns
def load_df(csv_path='...', nrows=None):  
    JSON_COLUMNS = ['device', 'geoNetwork', 'totals', 'trafficSource']
    
    df = pd.read_csv(csv_path, 
                     converters={column: json.loads for column in JSON_COLUMNS}, 
                     dtype={'fullVisitorId': 'str'}, # Important!!
                     nrows=nrows)
    
    for column in JSON_COLUMNS:
        column_as_df = json_normalize(df[column])
        column_as_df.columns = [f"{column}.{subcolumn}" for subcolumn in column_as_df.columns]
        df = df.drop(column, axis=1).merge(column_as_df, right_index=True, left_index=True)
    print(f"Loaded {os.path.basename(csv_path)}. Shape: {df.shape}")
    return df

print(os.listdir("..."))

wanted_cols = ['date', 'fullVisitorId','channelGrouping','socialEngagementType','device.browser','device.operatingSystem',
'geoNetwork.country', 'totals.bounces','totals.hits', 'totals.newVisits', 'totals.pageviews', 'totals.sessionQualityDim', 
'totals.timeOnSite','totals.transactionRevenue','trafficSource.adwordsClickInfo.isVideoAd', 
'trafficSource.adwordsClickInfo.page','trafficSource.adwordsClickInfo.slot','trafficSource.isTrueDirect']


df = load_df()
df = df[df[wanted_cols]

## one hot encoding
def one_hot(data):
    categorical = ['channelGrouping','device_browser','device_operatingSystem','geoNetwork_country']
    boolean = ['trafficSource_adwordsClickInfo.isVideoAd','trafficSource_isTrueDirect']
    for col in categorical:
        new = pd.get_dummies(data[col])
        new.columns = [f"{col}.{subcolumn}" for subcolumn in new.columns]
        data = data.drop(col, axis=1)
        data = data.merge(new, right_index=True, left_index=True)
    for col in boolean:
        data[col].replace({True:1,False:0},inplace=True)
    return data
    
## ordianal encoding
def ordinary(data):
    categorical = ['channelGrouping','device_browser','device_operatingSystem','geoNetwork_country']
    boolean = ['trafficSource_adwordsClickInfo.isVideoAd','trafficSource_isTrueDirect']
    for col in categorical:
        attributes = data[col].unique()
        d = dict(enumerate(cg,start=1))
        new = dict((v,k) for k,v in d.items())
        data[col].replace(new,inplace = True)
    for col in boolean:
        data[col].replace({True:1,False:0},inplace=True)
    return data
