import os
import json
import numpy as np
import pandas as pd
from pandas.io.json import json_normalize

#flatten columns
def load_df(csv_path='...', nrows=None):  
    JSON_COLUMNS = ['device', 'geoNetwork', 'totals', 'trafficSource']
    
    df = pd.read_csv(csv_path, 
                     converters={column: json.loads for column in JSON_COLUMNS}, 
                     dtype={'fullVisitorId': 'str'}, # Important!!
                     nrows=nrows)
    
    for column in JSON_COLUMNS:
        column_as_df = json_normalize(df[column])
        column_as_df.columns = [f"{column}.{subcolumn}" for subcolumn in column_as_df.columns]
        df = df.drop(column, axis=1).merge(column_as_df, right_index=True, left_index=True)
    print(f"Loaded {os.path.basename(csv_path)}. Shape: {df.shape}")
    return df

print(os.listdir("..."))

unwanted_cols = ['customDimensions','hits','visitId','visitNumber','visitStartTime','device.browserSize', 
                  'device.browserVersion','device.flashVersion','device.language','device.mobileDeviceBranding',
                  'device.mobileDeviceInfo', 'device.mobileDeviceMarketingName','device.mobileDeviceModel','device.mobileInputSelector',
                  'device.operatingSystemVersion','device.screenColors', 'device.screenResolution', 'geoNetwork.city','geoNetwork.cityId',
                  'geoNetwork.latitude', 'geoNetwork.longitude', 'geoNetwork.metro','geoNetwork.networkDomain', 
                  'geoNetwork.networkLocation','geoNetwork.region', 'geoNetwork.subContinent', 'totals.visits',
                  'trafficSource.adwordsClickInfo.criteriaParameters', 'trafficSource.adwordsClickInfo.gclId', 
                  'trafficSource.campaign','trafficSource.referralPath']

df = load_df()
df = df.drop(unwanted_cols,axis=1)
